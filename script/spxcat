#!/usr/bin/perl
#
# This file is part of mpd-hora 
#
# This software is copyright (c) 2011 by kev.
# contact: kevatflujosdotorg
#
# This is free software; you can redistribute it and/or modify it under
# the same terms as the Perl 5 programming language system itself.
#
# http://dev.perl.org/licenses/

use strict; 
use warnings; 
#die "Not Enough arguments\n" if $#ARGV != 1;

my $horalib="/var/lib/mpd/hora";
my ($hour, $min) = &get_time;

my ($outfile) = @ARGV; #get outfile from cmd line

my $hour_file = "$horalib/HRS$hour.spx"; 
my $min_file = "$horalib/MIN$min.spx"; 
if ($min ne " ")
    {
        &spxcat;
    } else { #hora en punto
        
	my $cmd = join(" ", ("/bin/cp", $hour_file, $outfile));
        system ("$cmd") == 0 or die "Cannot open pipe to spxcat ($?): $!";

    }

sub spxcat {
    my $out_size; 
    my $count = 0;
    &spx_dec($hour_file, 1); 
    &spx_dec($min_file, 0); 
    
    my @tmps = ("/tmp/spxout0.wav", "/tmp/spxout1.wav");
    for (@tmps) 
    {
    
       $out_size += -s $_ || die "cant get out_size: $!\n";
    }
    open IN1, '<', "/tmp/spxout1.wav" || die "Can't open file tmpfile: $!\n";
    open IN2, '<', "/tmp/spxout0.wav" || die "Can't open file tmpfile: $!\n";
    open OUT, '>', "/tmp/spxout.wav" || die "Can't open file $outfile\n";
    
    # important info for headers
    my $data_size = $out_size - 88; # 44 bits * 2 files 
    my $fs_8 = $out_size - 16; # 8 bits * 2 files
    
    # step through header
    my $buffer;
    read IN1, $buffer,4 ;
    print OUT $buffer;
    read IN1, $buffer,4;
    print OUT pack("V",$fs_8);
    read IN1, $buffer,32;
    print OUT $buffer;
    print OUT pack("V",$data_size);
    # write out the rest
    print OUT $_ while <IN1>;
    seek IN2, 44, 0;
    print OUT $_ while <IN2>;
    
    close IN1;
    close IN2;
    close OUT;
    &spx_enc($outfile);
    unlink glob "/tmp/spxout*";
}

sub spx_dec {
    my $file = shift;
    my $i = shift;
    my $out = "/tmp/spxout" . $i . ".wav";
    my $string = join(" ", ("/usr/bin/speexdec", $file, $out));
    my $pid = open PIPE, "-|";
    die "Cannot fork $!" unless defined $pid;
    unless ( $pid ) {
        exec "$string" or die "Cannot open pipe to speexdec: $!";
    }
    my @pipe;
    for (<PIPE>){push(@pipe,$_); }
    return @pipe;
}

sub spx_enc {
    my $file = shift;
    #my $out = "/tmp/hora.spx";
    my $string = join(" ", ("/usr/bin/speexenc", "/tmp/spxout.wav", $file));
    my $pid = open PIPE, "-|";
    die "Cannot fork $!" unless defined $pid;
    unless ( $pid ) {
        exec "$string" or die "Cannot open pipe to speexdec: $!";
    }
    my @pipe;
    for (<PIPE>){push(@pipe,$_); }
    return @pipe;
}

sub get_time
{
    my @timeData = localtime(time);
    my $min = $timeData[1];
    my $hour = $timeData[2];
    if($hour eq "0") {$hour = "12"};
    for ($hour, $min) {
       if(length($_) == 1){$_ = "0" . $_};
    }
    if ($min eq "00") 
    {
        $hour = $hour . "_0";
        $min = " ";
    }
    return ($hour, $min);
}
